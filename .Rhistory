language_fixed[43,3] <- "en"
language_fixed[51,3] <- "en"
language_fixed[53,3] <- "en"
language_fixed[56,3] <- "en"
language_fixed[60,3] <- "en"
language_fixed[61,3] <- "en"
language_fixed[63,3] <- "en"
language_fixed[69,3] <- "en"
language_fixed[75,3] <- "en"
language_fixed[77,3] <- "es"
language_fixed[78,3] <- "en"
survey_full <- left_join(survey_full, language_fixed) %>% rename("language_book" = "language")
# find language of the title chosen as best recommender
rec_title <- survey_full %>%
select(recommendation_title) %>%
distinct(recommendation_title)
language_recommendation <- detect_language(rec_title$recommendation_title) %>%
as.data.frame() %>%
rename("language_recommendation" = ".")
rec_title <- cbind(rec_title, language_recommendation)
rec_title$language_recommendation <- c("de","de", NA, "de", "de", "de", "de", "de","de", "de", "es", "es", "es", "de", "fr", "en", "fr", "de", "en", "de","en","en","en","en","en","en","en","en","de","de","de","de","de","de","en","de","en","de","en","en","en","de","fr", "en","en","en","en","de","en","en","en","de","en","en","en","de","de","de","de","en","de")
survey_full <- merge(survey_full, rec_title) %>%
select(author, title, recommendation_title,recommendation_author:language_recommendation) %>%
arrange(ordner)
eval_list <- cbind(eval_list,"language" = language_fixed[,"language"])
# Create language proportion columns
same_lang_prop <- data.frame()
for(i in 1:20){
n_distinct_lang <- eval_list %>% filter(ordner == i) %>% distinct(language) %>% nrow() %>% as.integer()
same_lang_prop_i <- rep(n_distinct_lang/4, 4) %>% as.data.frame()
same_lang_prop <- rbind(same_lang_prop, same_lang_prop_i)
}
colnames(same_lang_prop) <- "same_lang_prop"
eval_list <- cbind(eval_list, same_lang_prop)
survey_full <- left_join(survey_full, eval_list)
# Create column with number of distinct languages for each of the 20 questions
unique_languages = c()
for(i in 1:20){
temp <- eval_list %>%
filter(ordner == i) %>%
distinct(language) %>%
nrow()
unique_languages <- append(unique_languages, temp)
}
unique_languages <- data.frame(ordner = 1:20, as.data.frame(unique_languages))
survey_full <- merge(survey_full, unique_languages)
survey_full <- survey_full %>% mutate(same_language = ifelse(language_book == language_recommendation, "same_language", "different_language"))
survey_full <- survey_full[!duplicated(as.list(survey_full))] %>% as.data.frame()
#1 4 same authors, series, same lang
#2 2 same authors, all same lang
#3 2 same authors, book of these diff lang, other two books same lang as main
#4 4 different authors, 2 same lang
#5 4 different authors, all same lang
#6 3 same authors, one of these different language as main
#7 4 different authors, 3 different languages, 1 same as main
#8 2 same authors, all same lang
#9 4 diff authors, 2 same lang as main
#10 4 diff authors, all same lang
#11 3 same authors, all same lang
#12 3 same authors, all same lang
#13 2 same authors, all same lang
#14 4 different authors, 3 same lang
#15 4 diff authors, 3 diff lang. 1 same as main
#16 4 diff authors, all same lang
#17 4 diff authors, all same lang
#18 2 same authors, 3 same lang
#19 4 diff authors, 3 same lang
#20 2 same authors, all same lang
# 4 same authors
survey_full %>% filter(ordner == 1) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = "Only Series - following book chosen most often by far")
# 3 same authors
survey_full %>% filter(ordner %in% c(6,11,12)) %>% ggplot(aes(same_author)) + geom_histogram(stat = "count") + labs(title = "When 2 books of the same author are available,\n people almost exclusively choose the book from the same author")
survey_full %>% filter(ordner %in% c(6,11,12) & same_author == "different_author") %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") # others all same language
# 4/8 most similar cover (ordner 6)
# 4/8 just seem random (ordner 11)
# 2 same authors
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% ggplot(aes(same_author)) + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people still tend to choose the book of the same author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20) & same_author == "different_author") %>% arrange(ordner, recommendation_author)
#ordner 2 14x more similar cover
#ordner 3 12x same rather than different language
#ordner 8 10x look just like random decision (maybe people want something from a different author?!?)
#ordner 13 7x looks random
#ordner 18 5x seems random (diff language, diff cover), 18 similar content, same lang, similar cover
#ordner 20 4x looks random, 8 seem plausible (also story about animal)
# 4 different authors
survey_full %>% filter(ordner %in% c(4,5,7,10,14,15,16,17,19)) %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") # random guessing would be 7/27 options have different language ~1/4 expected -> not that much over expectation
# Language Distribution
survey_full %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") + facet_wrap(.~same_lang_prop)+labs(title = "language choice behavior by proportion of same language available")
for(i in 1:20){
plot_i <- survey_full %>% filter(ordner == i) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = paste("ordner",i))
print(plot_i)
}
survey_full %>% filter(ordner == 12) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count")
unique(survey_full$ordner)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(stringr)
library(cld3)
library(stringi)
survey_orig <- read_csv("survey_59.csv")
survey_long <- survey_orig %>%
select(-Zeitstempel) %>%
pivot_longer(cols = 1:20, names_to = "book", values_to = "recommendation") %>%
arrange(book)
books <- str_split(survey_long$book, " -  ", simplify = TRUE) %>%
as.data.frame() %>%
rename("author" = V1, "title" = V2)
recommendation <- str_split(survey_long$recommendation, " - ", simplify = TRUE) %>%
as.data.frame() %>%
select(-V3) %>%
rename("recommendation_author" = V1, "recommendation_title" = V2)
survey <- cbind(books, recommendation)
# Prepare data ----------------------------------------------------------------------------------------------------
path_sam <- "/Users/samuelpflueger/SynologyDrive/01_Uni/02_Master/03_Semester/05_SS21/20_Data_Mining_Seminar/R/Analysis/Eval_Survey_Kopie.csv"
path_tobi <- "/Users/Tobitie/Google Drive/Uni/Master/4. Semester/Data Mining Cup/Evaluvaluation Set_v1.csv"
eval_list <- read_delim(path_sam, delim =";")
eval_list <- read_delim(path_tobi, delim =";")
# Prepare data ----------------------------------------------------------------------------------------------------
path_sam <- "/Users/samuelpflueger/SynologyDrive/01_Uni/02_Master/03_Semester/05_SS21/20_Data_Mining_Seminar/R/Analysis/Eval_Survey_Kopie.csv"
path_tobi <- "/Users/Tobitie/Google Drive/Uni/Master/4. Semester/Data Mining Cup/Evaluvaluation Set_v1.csv"
eval_list <- read_delim(path_tobi, delim =";")
#eval_list2 <- read_csv(file = path_sam)
colnames(eval_list) <- tolower(colnames(eval_list))
#eval_list <- eval_list %>% rename("title" = "title_option")
survey$title = str_remove(survey$title, "^ ")
survey$recommendation_title = str_remove(survey$recommendation_title, "^ ")
#colnames(eval_list)[4] <- "title_option"
survey_full <- 0
survey_full <- left_join(survey, eval_list %>% select(-author, -question, -reference), by = c("title"))
survey_full <- left_join(survey_full, eval_list %>% select(title, itemid), by = c("recommendation_title"="title")) %>% rename(itemid_rec = itemid.y, itemid = itemid.x)
#survey_full <- left_join(survey, eval_list, by = c("recommendation_title" = "title")) %>%
#rename(itemid_rec = itemid)
# Author preparation --------------------------------------------------------------------------------------------------
# how often is same author chosen?
same_author = c()
for(i in 1:20){
temp <- full_join(survey_full,eval_list) %>%
filter(ordner == i) %>%
distinct(author) %>%
nrow()
same_author <- cbind(same_author, temp)
}
same_author <- as.data.frame(same_author)
colnames(same_author) <- 1:20
same_author <- as.data.frame(same_author) %>% pivot_longer(cols = 1:20, names_to = "ordner", values_to = "distinct_authors") %>% mutate(ordner = as.double(ordner))
survey_full <- left_join(survey_full, same_author, by = "ordner") # ordner 12 missing because no title for those books - add manually
survey_full[(which(is.na(survey_full[,"ordner"]))),"ordner"] <- 12
# Create same author column
survey_full$same_author <- ifelse(survey_full$author.x == survey_full$recommendation_author, "same_author", "different_author")
survey_full$author.x
survey_full
# Create same author column
survey_full$same_author <- ifelse(survey_full$author == survey_full$recommendation_author, "same_author", "different_author")
# Prepare data ----------------------------------------------------------------------------------------------------
path_sam <- "/Users/samuelpflueger/SynologyDrive/01_Uni/02_Master/03_Semester/05_SS21/20_Data_Mining_Seminar/R/Analysis/Eval_Survey_Kopie.csv"
path_tobi <- "/Users/Tobitie/Google Drive/Uni/Master/4. Semester/Data Mining Cup/Evaluvaluation Set_v1.csv"
eval_list <- read_delim(path_tobi, delim =";")
#eval_list2 <- read_csv(file = path_sam)
colnames(eval_list) <- tolower(colnames(eval_list))
#eval_list <- eval_list %>% rename("title" = "title_option")
survey$title = str_remove(survey$title, "^ ")
survey$recommendation_title = str_remove(survey$recommendation_title, "^ ")
#colnames(eval_list)[4] <- "title_option"
survey_full <- 0
survey_full <- left_join(survey, eval_list %>% select(-author, -question, -reference), by = c("title"))
survey_full <- left_join(survey_full, eval_list %>% select(title, itemid), by = c("recommendation_title"="title")) %>% rename(itemid_rec = itemid.y, itemid = itemid.x)
#survey_full <- left_join(survey, eval_list, by = c("recommendation_title" = "title")) %>%
#rename(itemid_rec = itemid)
# Author preparation --------------------------------------------------------------------------------------------------
# how often is same author chosen?
same_author = c()
for(i in 1:20){
temp <- full_join(survey_full,eval_list) %>%
filter(ordner == i) %>%
distinct(author) %>%
nrow()
same_author <- cbind(same_author, temp)
}
same_author <- as.data.frame(same_author)
colnames(same_author) <- 1:20
same_author <- as.data.frame(same_author) %>% pivot_longer(cols = 1:20, names_to = "ordner", values_to = "distinct_authors") %>% mutate(ordner = as.double(ordner))
survey_full <- left_join(survey_full, same_author, by = "ordner") # ordner 12 missing because no title for those books - add manually
survey_full[(which(is.na(survey_full[,"ordner"]))),"ordner"] <- 12
# Create same author column
survey_full$same_author <- ifelse(survey_full$author == survey_full$recommendation_author, "same_author", "different_author")
# Language preparation --------------------------------------------------------------------------------------------------
# detect if language is same
book_language <- detect_language(eval_list$title) %>%
as.data.frame() %>%
rename("language" = ".")
#manually fixing errors and combining data frames
language_fixed <- cbind(eval_list, book_language) %>% select(author, title, language)
language_fixed[7,3] <- "de"
language_fixed[10,3] <- "de"
language_fixed[11,3] <- "en"
language_fixed[12,3] <- "en"
language_fixed[18,3] <- "de"
language_fixed[19,3] <- "de"
language_fixed[22,3] <- "en"
language_fixed[24,3] <- "de"
language_fixed[25,3] <- "en"
language_fixed[26,3] <- "en"
language_fixed[27,3] <- "fr"
language_fixed[28,3] <- "de"
language_fixed[29,3] <- "en"
language_fixed[30,3] <- "en"
language_fixed[32,3] <- "en"
language_fixed[33,3] <- "en"
language_fixed[35,3] <- "en"
language_fixed[36,3] <- "en"
language_fixed[37,3] <- "de"
language_fixed[39,3] <- "de"
language_fixed[40,3] <- "de"
language_fixed[41,3] <- "en"
language_fixed[42,3] <- "en"
language_fixed[43,3] <- "en"
language_fixed[51,3] <- "en"
language_fixed[53,3] <- "en"
language_fixed[56,3] <- "en"
language_fixed[60,3] <- "en"
language_fixed[61,3] <- "en"
language_fixed[63,3] <- "en"
language_fixed[69,3] <- "en"
language_fixed[75,3] <- "en"
language_fixed[77,3] <- "es"
language_fixed[78,3] <- "en"
survey_full <- left_join(survey_full, language_fixed) %>% rename("language_book" = "language")
# find language of the title chosen as best recommender
rec_title <- survey_full %>%
select(recommendation_title) %>%
distinct(recommendation_title)
language_recommendation <- detect_language(rec_title$recommendation_title) %>%
as.data.frame() %>%
rename("language_recommendation" = ".")
rec_title <- cbind(rec_title, language_recommendation)
rec_title$language_recommendation <- c("de","de", NA, "de", "de", "de", "de", "de","de", "de", "es", "es", "es", "de", "fr", "en", "fr", "de", "en", "de","en","en","en","en","en","en","en","en","de","de","de","de","de","de","en","de","en","de","en","en","en","de","fr", "en","en","en","en","de","en","en","en","de","en","en","en","de","de","de","de","en","de")
survey_full <- merge(survey_full, rec_title) %>%
select(author, title, recommendation_title,recommendation_author:language_recommendation) %>%
arrange(ordner)
eval_list <- cbind(eval_list,"language" = language_fixed[,"language"])
# Create language proportion columns
same_lang_prop <- data.frame()
for(i in 1:20){
n_distinct_lang <- eval_list %>% filter(ordner == i) %>% distinct(language) %>% nrow() %>% as.integer()
same_lang_prop_i <- rep(n_distinct_lang/4, 4) %>% as.data.frame()
same_lang_prop <- rbind(same_lang_prop, same_lang_prop_i)
}
colnames(same_lang_prop) <- "same_lang_prop"
eval_list <- cbind(eval_list, same_lang_prop)
survey_full <- left_join(survey_full, eval_list)
# Create column with number of distinct languages for each of the 20 questions
unique_languages = c()
for(i in 1:20){
temp <- eval_list %>%
filter(ordner == i) %>%
distinct(language) %>%
nrow()
unique_languages <- append(unique_languages, temp)
}
unique_languages <- data.frame(ordner = 1:20, as.data.frame(unique_languages))
survey_full <- merge(survey_full, unique_languages)
survey_full <- survey_full %>% mutate(same_language = ifelse(language_book == language_recommendation, "same_language", "different_language"))
survey_full <- survey_full[!duplicated(as.list(survey_full))] %>% as.data.frame()
#1 4 same authors, series, same lang
#2 2 same authors, all same lang
#3 2 same authors, book of these diff lang, other two books same lang as main
#4 4 different authors, 2 same lang
#5 4 different authors, all same lang
#6 3 same authors, one of these different language as main
#7 4 different authors, 3 different languages, 1 same as main
#8 2 same authors, all same lang
#9 4 diff authors, 2 same lang as main
#10 4 diff authors, all same lang
#11 3 same authors, all same lang
#12 3 same authors, all same lang
#13 2 same authors, all same lang
#14 4 different authors, 3 same lang
#15 4 diff authors, 3 diff lang. 1 same as main
#16 4 diff authors, all same lang
#17 4 diff authors, all same lang
#18 2 same authors, 3 same lang
#19 4 diff authors, 3 same lang
#20 2 same authors, all same lang
# 4 same authors
survey_full %>% filter(ordner == 1) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = "Only Series - following book chosen most often by far")
# 3 same authors
survey_full %>% filter(ordner %in% c(6,11,12)) %>% ggplot(aes(same_author)) + geom_histogram(stat = "count") + labs(title = "When 2 books of the same author are available,\n people almost exclusively choose the book from the same author")
survey_full %>% filter(ordner %in% c(6,11,12) & same_author == "different_author") %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") # others all same language
# 4/8 most similar cover (ordner 6)
# 4/8 just seem random (ordner 11)
# 2 same authors
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% ggplot(aes(same_author)) + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people still tend to choose the book of the same author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20) & same_author == "different_author") %>% arrange(ordner, recommendation_author)
#ordner 2 14x more similar cover
#ordner 3 12x same rather than different language
#ordner 8 10x look just like random decision (maybe people want something from a different author?!?)
#ordner 13 7x looks random
#ordner 18 5x seems random (diff language, diff cover), 18 similar content, same lang, similar cover
#ordner 20 4x looks random, 8 seem plausible (also story about animal)
# 4 different authors
survey_full %>% filter(ordner %in% c(4,5,7,10,14,15,16,17,19)) %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") # random guessing would be 7/27 options have different language ~1/4 expected -> not that much over expectation
# Language Distribution
survey_full %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") + facet_wrap(.~same_lang_prop)+labs(title = "language choice behavior by proportion of same language available")
for(i in 1:20){
plot_i <- survey_full %>% filter(ordner == i) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = paste("ordner",i))
print(plot_i)
}
survey_full %>% filter(ordner == 12) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count")
unique(survey_full$ordner)
## Sam
# How many recommendations have the same category as the book?
s1 <- survey_full
s1 <- left_join(s1, eval_list %>% select(title, itemid), by = c("itemid_rec" = "itemid")) %>%
rename(topic_rec = topic)
s1 <- s1 %>% mutate(same_category = ifelse(topic == topic_rec, "yes", "no"))
## cover similarity
survey_color <- survey_full %>% select(ordner, itemid, `main color`, itemid_rec) %>% left_join(
eval_list %>% select(itemid, `main color`), by = c("itemid_rec" = "itemid"))
#plot color similarity counts for all 20 questions
survey_color %>% group_by(ordner) %>%
summarise(same_color = if_else(`main color.x` == `main color.y`, "yes", "no")) %>%
group_by(ordner, same_color) %>% count() %>%
ggplot(aes(same_color, n))+
geom_col()+
facet_wrap(vars(ordner))
# questions with no obvious choice: 4,5,7,9,14,15,16,19ss
survey_color %>% group_by(ordner, itemid_rec) %>%
count() %>% #filter(ordner == 1) %>%
ggplot(aes(as.factor(itemid_rec), n))+
geom_col()+
facet_wrap(vars(ordner), drop = TRUE)
## cover similarity
survey_color <- survey_full %>% select(ordner, itemid, `main color`, itemid_rec) %>% left_join(
eval_list %>% select(itemid, `main color`), by = c("itemid_rec" = "itemid"))
#plot color similarity counts for all 20 questions
survey_color %>% group_by(ordner) %>%
summarise(same_color = if_else(`main color.x` == `main color.y`, "yes", "no")) %>%
group_by(ordner, same_color) %>% count() %>%
ggplot(aes(same_color, n))+
geom_col()+
facet_wrap(vars(ordner))
# questions with no obvious choice: 4,5,7,9,14,15,16,19ss
survey_color %>% group_by(ordner, itemid_rec) %>%
count() %>% #filter(ordner == 1) %>%
ggplot(aes(as.factor(itemid_rec), n))+
geom_col()+
facet_wrap(vars(ordner), drop = TRUE)
## cover similarity
survey_color <- survey_full %>% select(ordner, itemid, `main color`, itemid_rec) %>% left_join(
eval_list %>% select(itemid, `main color`), by = c("itemid_rec" = "itemid"))
#plot color similarity counts for all 20 questions
survey_color %>% group_by(ordner) %>%
summarise(same_color = if_else(`main color.x` == `main color.y`, "yes", "no")) %>%
group_by(ordner, same_color) %>% count() %>%
ggplot(aes(same_color, n))+
geom_col()+
facet_wrap(vars(ordner))
# questions with no obvious choice: 4,5,7,9,14,15,16,19ss
survey_color %>% group_by(ordner, itemid_rec) %>%
count() %>% #filter(ordner == 1) %>%
ggplot(aes(as.factor(itemid_rec), n))+
geom_col()+
facet_wrap(vars(ordner), drop = TRUE)
# 4 same authors
survey_full %>% filter(ordner == 1) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = "Only Series - following book chosen most often by far")
survey_full %>% filter(ordner == 1)
# 4 same authors
survey_full %>% filter(ordner == 1) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = "Only Series - following book chosen most often by far")
?labs
survey_full %>% filter(ordner == 1)
# 4 same authors
survey_full %>% filter(ordner == 1) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = "Only Series - following book chosen most often by far") + scale_x_discrete(labels=c("Das Lied von Eis und Feuer 03. Der Thron der Sieben Königreiche" = "GoT - 3", "Das Lied von Eis und Feuer 05. Sturm der Schwerter" = "GoT - 5",
"Das Lied von Eis und Feuer 06. Die Königin der Drachen" = "GoT - 6"))
# 4 same authors
survey_full %>% filter(ordner == 1) %>% ggplot(aes(recommendation_title)) + geom_histogram(stat = "count") + labs(title = "Book Series - GoT 4 - following book chosen most often by far") + scale_x_discrete(labels=c("Das Lied von Eis und Feuer 03. Der Thron der Sieben Königreiche" = "GoT - 3", "Das Lied von Eis und Feuer 05. Sturm der Schwerter" = "GoT - 5",
"Das Lied von Eis und Feuer 06. Die Königin der Drachen" = "GoT - 6"))
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% ggplot(aes(same_author)) + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people still tend to choose the book of the same author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% na.omit() %>% ggplot(aes(same_author))  + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people still tend to choose the book of the same author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% ggplot(aes(same_author))  + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people still tend to choose the book of the same author")
# 3 same authors
survey_full %>% filter(ordner %in% c(6,11,12)) %>% ggplot(aes(same_author)) + geom_histogram(stat = "count") + labs(title = "When 2 books of the same author are available,\n people almost exclusively choose the book from the same author")
survey_full %>% filter(ordner %in% c(6,11,12))
survey_full %>% filter(ordner %in% c(6,11,12))
survey_full %>% filter(ordner %in% c(6,11,12)) %>% filter(same_author == "same_author")
survey_full %>% filter(ordner %in% c(6,11,12))
# 3 same authors
survey_full %>% filter(ordner %in% c(6,11,12)) %>% ggplot(aes(same_author)) + geom_histogram(stat = "count") + labs(title = "When 2 books of the same author are available,\n author seems not to have an influence")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% ggplot(aes(same_author))  + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people still tend to choose the book of the same author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% ggplot(aes(same_author))  + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people still tend to choose the book of the same author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))%>% ggplot(aes(same_author))  + geom_histogram(stat = "count") + labs(title = "When one book of the same author is available,\n people tend to choose the book of the same author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20))
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20)) %>% filter(same_author == "same_author")
survey_full %>% filter(ordner %in% c(2,3,8,13,18,20) & same_author == "different_author") %>% arrange(ordner, recommendation_author)
# Language Distribution
survey_full %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") + facet_wrap(.~same_lang_prop)+labs(title = "language choice behavior by proportion of same language available")
# Prepare data ----------------------------------------------------------------------------------------------------
path_sam <- "/Users/samuelpflueger/SynologyDrive/01_Uni/02_Master/03_Semester/05_SS21/20_Data_Mining_Seminar/R/Analysis/Eval_Survey_Kopie.csv"
path_tobi <- "/Users/Tobitie/Google Drive/Uni/Master/4. Semester/Data Mining Cup/Evaluvaluation Set_v1.csv"
eval_list <- read_delim(path_tobi, delim =";")
#eval_list2 <- read_csv(file = path_sam)
colnames(eval_list) <- tolower(colnames(eval_list))
#eval_list <- eval_list %>% rename("title" = "title_option")
survey$title = str_remove(survey$title, "^ ")
survey$recommendation_title = str_remove(survey$recommendation_title, "^ ")
#colnames(eval_list)[4] <- "title_option"
survey_full <- 0
survey_full <- left_join(survey, eval_list %>% select(-author, -question, -reference), by = c("title"))
survey_full <- left_join(survey_full, eval_list %>% select(title, itemid), by = c("recommendation_title"="title")) %>% rename(itemid_rec = itemid.y, itemid = itemid.x)
#survey_full <- left_join(survey, eval_list, by = c("recommendation_title" = "title")) %>%
#rename(itemid_rec = itemid)
# Author preparation --------------------------------------------------------------------------------------------------
# how often is same author chosen?
same_author = c()
for(i in 1:20){
temp <- full_join(survey_full,eval_list) %>%
filter(ordner == i) %>%
distinct(author) %>%
nrow()
same_author <- cbind(same_author, temp)
}
same_author <- as.data.frame(same_author)
colnames(same_author) <- 1:20
same_author <- as.data.frame(same_author) %>% pivot_longer(cols = 1:20, names_to = "ordner", values_to = "distinct_authors") %>% mutate(ordner = as.double(ordner))
survey_full <- left_join(survey_full, same_author, by = "ordner") # ordner 12 missing because no title for those books - add manually
survey_full[(which(is.na(survey_full[,"ordner"]))),"ordner"] <- 12
# Create same author column
survey_full$same_author <- ifelse(survey_full$author == survey_full$recommendation_author, "same_author", "different_author")
# Language preparation --------------------------------------------------------------------------------------------------
# detect if language is same
book_language <- detect_language(eval_list$title) %>%
as.data.frame() %>%
rename("language" = ".")
#manually fixing errors and combining data frames
language_fixed <- cbind(eval_list, book_language) %>% select(author, title, language)
language_fixed[7,3] <- "de"
language_fixed[10,3] <- "de"
language_fixed[11,3] <- "en"
language_fixed[12,3] <- "en"
language_fixed[18,3] <- "de"
language_fixed[19,3] <- "de"
language_fixed[22,3] <- "en"
language_fixed[24,3] <- "de"
language_fixed[25,3] <- "en"
language_fixed[26,3] <- "en"
language_fixed[27,3] <- "fr"
language_fixed[28,3] <- "de"
language_fixed[29,3] <- "en"
language_fixed[30,3] <- "en"
language_fixed[32,3] <- "en"
language_fixed[33,3] <- "en"
language_fixed[35,3] <- "en"
language_fixed[36,3] <- "en"
language_fixed[37,3] <- "de"
language_fixed[39,3] <- "de"
language_fixed[40,3] <- "de"
language_fixed[41,3] <- "en"
language_fixed[42,3] <- "en"
language_fixed[43,3] <- "en"
language_fixed[51,3] <- "en"
language_fixed[53,3] <- "en"
language_fixed[56,3] <- "en"
language_fixed[60,3] <- "en"
language_fixed[61,3] <- "en"
language_fixed[63,3] <- "en"
language_fixed[69,3] <- "en"
language_fixed[75,3] <- "en"
language_fixed[77,3] <- "es"
language_fixed[78,3] <- "en"
survey_full <- left_join(survey_full, language_fixed) %>% rename("language_book" = "language")
# find language of the title chosen as best recommender
rec_title <- survey_full %>%
select(recommendation_title) %>%
distinct(recommendation_title)
language_recommendation <- detect_language(rec_title$recommendation_title) %>%
as.data.frame() %>%
rename("language_recommendation" = ".")
rec_title <- cbind(rec_title, language_recommendation)
rec_title$language_recommendation <- c("de","de", NA, "de", "de", "de", "de", "de","de", "de", "es", "es", "es", "de", "fr", "en", "fr", "de", "en", "de","en","en","en","en","en","en","en","en","de","de","de","de","de","de","en","de","en","de","en","en","en","de","fr", "en","en","en","en","de","en","en","en","de","en","en","en","de","de","de","de","en","de")
survey_full <- merge(survey_full, rec_title) %>%
select(author, title, recommendation_title,recommendation_author:language_recommendation) %>%
arrange(ordner)
eval_list <- cbind(eval_list,"language" = language_fixed[,"language"])
# Create language proportion columns
same_lang_prop <- data.frame()
for(i in 1:20){
n_distinct_lang <- eval_list %>% filter(ordner == i) %>% distinct(language) %>% nrow() %>% as.integer()
same_lang_prop_i <- rep(n_distinct_lang/4/0.25, 4) %>% as.data.frame()
same_lang_prop <- rbind(same_lang_prop, same_lang_prop_i)
}
colnames(same_lang_prop) <- "same_lang_prop"
eval_list <- cbind(eval_list, same_lang_prop)
survey_full <- left_join(survey_full, eval_list)
# Create column with number of distinct languages for each of the 20 questions
unique_languages = c()
for(i in 1:20){
temp <- eval_list %>%
filter(ordner == i) %>%
distinct(language) %>%
nrow()
unique_languages <- append(unique_languages, temp)
}
unique_languages <- data.frame(ordner = 1:20, as.data.frame(unique_languages))
survey_full <- merge(survey_full, unique_languages)
survey_full <- survey_full %>% mutate(same_language = ifelse(language_book == language_recommendation, "same_language", "different_language"))
survey_full <- survey_full[!duplicated(as.list(survey_full))] %>% as.data.frame()
# Language Distribution
survey_full %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") + facet_wrap(.~same_lang_prop)+labs(title = "language choice behavior by proportion of same language available")
# Language Distribution
survey_full %>% ggplot(aes(same_language)) + geom_histogram(stat = "count") + facet_wrap(.~same_lang_prop)+labs(title = "language choice behavior by number of different languages available")
# Language Distribution
survey_full %>% filter(!is.na(same_language)) %>%  ggplot(aes(same_language)) + geom_histogram(stat = "count") + facet_wrap(.~same_lang_prop)+labs(title = "language choice behavior by number of different languages available")
